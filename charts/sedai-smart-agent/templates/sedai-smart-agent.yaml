---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ .Values.workload.smartAgent.name }}-sa"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "sedai-smart-agent.labels" . | nindent 4 }}


---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: "{{ .Values.workload.smartAgent.name }}-cluster-role"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "sedai-smart-agent.labels" . | nindent 4 }}
rules:
- apiGroups:
  - ""
  resources:
  - replicationcontrollers
  - services
  - pods
  - nodes
  verbs:
  - get 
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  - deployments/scale 
  - statefulsets/scale  
  verbs:
  - get 
  - list
  - patch
  - update
  - watch
- apiGroups:
  - autoscaling
  - autoscaling.k8s.io 
  resources:
  - horizontalpodautoscalers
  - VerticalPodAutoscaler
  verbs:
  - get 
  - list
  - patch
  - update
  - watch
  - create
  - delete
- apiGroups:
  - batch
  resources:
  - cronjobs
  - jobs
  verbs:
  - get 
  - list
  - patch
  - update
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get 
  - list
  - watch
- apiGroups:
  - policy
  resources:
  - poddisruptionbudgets
  verbs:
  - get 
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  - ingressclasses
  - networkpolicies
  verbs:
  - get 
  - list
  - watch
- apiGroups:
  - metrics.k8s.io
  resources:
  - pods
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apps
  resources: ["*"]
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - karpenter.k8s.aws
  - karpenter.sh
  resources:
  - '*'
  verbs:
  - get
  - list
  - patch
  - update
  - watch
  - create
  - delete
- apiGroups:
  - kubeflow.org
  resources:
  - '*'
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- verbs:
  - get
  nonResourceURLs:
  - /metrics

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ .Values.workload.smartAgent.name }}-cluster-role-binding"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "sedai-smart-agent.labels" . | nindent 4 }}
subjects:
- kind: ServiceAccount
  name: "{{ .Values.workload.smartAgent.name }}-sa"
  namespace: {{ .Values.namespace }}
roleRef:
  kind: ClusterRole
  name: "{{ .Values.workload.smartAgent.name }}-cluster-role"
  apiGroup: rbac.authorization.k8s.io


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.workload.smartAgent.name }}"
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "sedai-smart-agent.labels" . | nindent 4 }} 
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sedai-smart-agent.selectorLabels" . | nindent 6 }}
  strategy: {}
  template:
    metadata:
      labels:
        {{- include "sedai-smart-agent.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccount: "{{ .Values.workload.smartAgent.name }}-sa"
      serviceAccountName: "{{ .Values.workload.smartAgent.name }}-sa"
      containers:
      - name: "{{ .Values.image.smartAgent.name }}"
        image: "{{ .Values.image.smartAgent.repository }}:{{ .Values.image.smartAgent.imageTag }}"
        imagePullPolicy: {{ .Values.image.smartAgent.imagePullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.resources.smartAgent.cpu.requests }}"          
            memory: "{{ .Values.resources.smartAgent.memory.requests }}"
          limits:
            cpu: "{{ .Values.resources.smartAgent.cpu.limits }}"
            memory: "{{ .Values.resources.smartAgent.memory.limits }}"
        envFrom:
        - secretRef:
            name: "{{ .Values.workload.smartAgent.secret }}"
        env:
        - name: _JAVA_OPTIONS
          value: "-Xms{{ floor (div (mul (int (.Values.resources.smartAgent.memory.requests | replace "Mi" "")) 25) 100) }}M -Xmx{{ floor (div (mul (int (.Values.resources.smartAgent.memory.limits | replace "Mi" "")) 47) 100) }}M"
        # Enabled Proxy for Smart Agent        
        {{- if .Values.proxySettings.enabled }}
        - name: PROXY_HOST
          value: "{{ .Values.proxySettings.proxyHost }}"      
        - name: PROXY_PORT
          value: "{{ .Values.proxySettings.proxyPort }}"      
        - name: PROXY_USERNAME
          value: "{{ .Values.proxySettings.proxyUsername }}"      
        - name: PROXY_PASSWORD
          value: "{{ .Values.proxySettings.proxyPassword }}"    
        {{- end }}      
        # Enabled Debug logging for Smart Agent
        {{- if .Values.enableAgentDebugLogs.enabled }}
        - name: AGENT_LOG_LEVEL
          value: {{ .Values.enableAgentDebugLogs.agentLogLevel }}
        - name: LOGGING_CONFIG
          value: {{ .Values.enableAgentDebugLogs.loggingConfig }}   
        {{- end }}
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1          
          failureThreshold: 3
          httpGet:
            path: /agent/health
            port: 8080
            scheme: HTTP
        startupProbe:
          httpGet:
            path: /agent/health
            port: 8080
            scheme: HTTP
          failureThreshold: 3
          periodSeconds: 30
          initialDelaySeconds: 120
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
            - all    