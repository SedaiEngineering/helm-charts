---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.workload.smartAgent.name }}"
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "sedai-smart-agent.labels" . | nindent 4 }}
    {{- with .Values.globalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.globalAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "sedai-smart-agent.selectorLabels" . | nindent 6 }}
  strategy: {}
  template:
    metadata:
      labels:
        {{- include "sedai-smart-agent.selectorLabels" . | nindent 8 }}
        {{- with .Values.globalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.globalAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccountName: "{{ .Values.workload.smartAgent.name }}-sa"

      # Pod-level security context
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001

      {{- with .Values.workload.smartAgent.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- if or .Values.globalTolerations .Values.workload.smartAgent.tolerations }}
      tolerations:
        {{- with .Values.globalTolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.workload.smartAgent.tolerations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}

      {{- with .Values.workload.smartAgent.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}

      containers:
      - name: "{{ .Values.image.smartAgent.name }}"
        image: "{{ include "sedai-smart-agent.imageRepository" (dict "globalRegistry" .Values.globalRegistry "repository" .Values.image.smartAgent.repository) }}:{{ .Values.image.smartAgent.imageTag }}"
        imagePullPolicy: {{ .Values.image.smartAgent.imagePullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.resources.smartAgent.cpu.requests }}"          
            memory: "{{ .Values.resources.smartAgent.memory.requests }}"
          limits:
            cpu: "{{ .Values.resources.smartAgent.cpu.limits }}"
            memory: "{{ .Values.resources.smartAgent.memory.limits }}"

        envFrom:
        - secretRef:
            name: "{{ .Values.workload.smartAgent.secret }}"

        env:
        - name: _JAVA_OPTIONS
          value: "-Xms{{ floor (div (mul (int (.Values.resources.smartAgent.memory.requests | replace "Mi" "")) 25) 100) }}M -Xmx{{ floor (div (mul (int (.Values.resources.smartAgent.memory.limits | replace "Mi" "")) 47) 100) }}M"
        - name: FLAGS_AUTOUPDATE_DISABLED
          value: "true"

        # Optional Proxy Settings
        {{- if .Values.proxySettings.enabled }}
        - name: PROXY_HOST
          value: "{{ .Values.proxySettings.proxyHost }}"      
        - name: PROXY_PORT
          value: "{{ .Values.proxySettings.proxyPort }}"      
        - name: PROXY_USERNAME
          value: "{{ .Values.proxySettings.proxyUsername }}"      
        - name: PROXY_PASSWORD
          value: "{{ .Values.proxySettings.proxyPassword }}"    
        {{- end }}

        # Optional Debug Logging
        {{- if .Values.enableAgentDebugLogs.enabled }}
        - name: AGENT_LOG_LEVEL
          value: {{ .Values.enableAgentDebugLogs.agentLogLevel }}
        - name: LOGGING_CONFIG
          value: {{ .Values.enableAgentDebugLogs.loggingConfig }}   
        {{- end }}

        {{-  if .Values.sedaiSync.enabled }}
        - name: KUBESPECCONTROLLER_BASEURL
          value: "https://sedai-kube-spec-controller-svc.{{ .Release.Namespace }}.svc:8443"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_ENABLED
          value: "{{ .Values.sedaiSync.enabled }}"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SSL_CA_PATH
          value: "{{ .Values.sedaiSync.tlsPath }}/ca.crt"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SSL_CERT_PATH
          value: "{{ .Values.sedaiSync.tlsPath }}/tls.crt"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SSL_KEY_PATH
          value: "{{ .Values.sedaiSync.tlsPath }}/tls.key"
        {{- end }}
        
        - name: KUBERNETES_MASTER
          value: "{{ .Values.kubernetes_master }}"

        {{-  if .Values.sedaiSync.enabled }}
        volumeMounts:
          - name: certs
            mountPath: "{{ .Values.sedaiSync.tlsPath }}"
            readOnly: true
        {{- end }}

        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1          
          failureThreshold: 3
          httpGet:
            path: /agent/health
            port: 8080
            scheme: HTTP

        startupProbe:
          httpGet:
            path: /agent/health
            port: 8080
            scheme: HTTP
          failureThreshold: 3
          periodSeconds: 30
          initialDelaySeconds: 40

        # Container-level security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
      {{-  if .Values.sedaiSync.enabled }}
      volumes:
        - name: certs
          secret:
            secretName: sedai-kube-spec-controller-tls
      {{- end }}
