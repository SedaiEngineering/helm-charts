# Production AWS EKS Configuration
# Comprehensive setup for production AWS environments

# Global metadata for all resources
globalLabels:
  environment: production
  cluster: eks-prod-us-west-2
  team: platform
  cost-center: engineering

globalAnnotations:
  company.io/owner: platform-team
  company.io/project: sedai-monitoring
  compliance.io/required: "true"
  backup.io/enabled: "true"

# Global tolerations for mixed architecture support
globalTolerations:
  # Allow scheduling on ARM-based nodes (AWS Graviton instances)
  - key: "kubernetes.io/arch"
    operator: "Equal"
    value: "arm64"
    effect: "NoSchedule"

# Sedai platform integration
sedaiIntegrationSettings:
  nickName: "Production EKS Cluster - US West 2"
  clusterName: "eks-prod-us-west-2"
  clusterProvider: "AWS"
  sedaiBaseUrl: "https://app.sedai.io"
  # Use Kubernetes secret for API token (recommended for production)
  sedaiApiTokenSecret: "sedai-api-secret"
  sedaiApiTokenSecretKey: "api-token"
  rbacReadOnly: false  # Enable full optimization capabilities

# Enable comprehensive monitoring stack
sedaiPrometheus:
  enabled: true
  server:
    retention: '24h'  # 24-hour retention for production
  nodeSelector:
    node-type: monitoring
  tolerations:
  - key: "monitoring"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"

sedaiKSM:
  enabled: true
  nodeSelector:
    node-type: monitoring

sedaiNodeExporter:
  enabled: true
  # Node Exporter runs on all nodes
  tolerations:
  - operator: "Exists"

# Enable auto-optimization
sedaiSync:
  enabled: true
  logLevel: "info"
  nodeSelector:
    node-type: monitoring

# Enable application performance monitoring
sedaiBeyla:
  enabled: true
  tolerations:
  - operator: "Exists"

sedaiGrafanaAlloy:
  enabled: true
  tolerations:
  - operator: "Exists"

# Production resource allocation
resources:
  smartAgent:
    cpu:
      requests: "1000m"
      limits: "2000m"
    memory:
      requests: "2048Mi"
      limits: "4096Mi"
  
  prometheus:
    cpu:
      requests: "2000m"
      limits: "4000m"
    memory:
      requests: "8192Mi"
      limits: "16384Mi"
    storage: "200Gi"
  
  ksm:
    cpu:
      requests: "500m"
      limits: "1000m"
    memory:
      requests: "1024Mi"
      limits: "2048Mi"
  
  sedaiSync:
    cpu:
      requests: "500m"
      limits: "1000m"
    memory:
      requests: "1024Mi"
      limits: "2048Mi"
    storage: "10Gi"

# Workload configuration with priority classes
workload:
  smartAgent:
    replicaCount: 1
    revisionHistoryLimit: 3
    priorityClassName: "sedai-production-high"  # High priority for main agent
    nodeSelector:
      node-type: monitoring
    tolerations:
    - key: "monitoring"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"

# Set priority classes for all components
smartAgentEnroll:
  enabled: true
  priorityClassName: "sedai-production-high"  # High priority for enrollment

sedaiPrometheus:
  priorityClassName: "sedai-production-medium"  # Medium priority for monitoring

sedaiKSM:
  priorityClassName: "sedai-production-medium"  # Medium priority for metrics

sedaiSync:
  priorityClassName: "sedai-production-high"  # High priority for optimization

sedaiNodeExporter:
  priorityClassName: "system-node-critical"  # Use built-in system priority

sedaiBeyla:
  priorityClassName: "sedai-production-medium"  # Medium priority for APM

sedaiGrafanaAlloy:
  priorityClassName: "sedai-production-medium"  # Medium priority for collection

# Enable debug logging if needed (disable in production)
enableAgentDebugLogs:
  enabled: false
  agentLogLevel: "INFO"

# Image pull configuration (if using private registry)
imagePullSecret:
  enabled: false
  secretName: ""

# Network configuration (if behind corporate proxy)
proxySettings:
  enabled: false
  # proxyHost: "proxy.company.com"
  # proxyPort: 3128
  # proxyUsername: "proxy-user"
  # proxyPassword: "proxy-password"