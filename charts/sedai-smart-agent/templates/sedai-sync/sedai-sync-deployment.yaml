{{- if .Values.sedaiSync.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sedai-kube-spec-controller
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "sedai-smart-agent.labels" . | nindent 4 }}
    {{- with .Values.globalLabels }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
  {{- with .Values.globalAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
    app: "sedai-kube-spec-controller"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "sedai-kube-spec-controller"
  strategy: {}
  template:
    metadata:
      labels:
        app: "sedai-kube-spec-controller"
        {{- with .Values.globalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.globalAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      serviceAccount: sedai-kube-spec-controller-sa
      serviceAccountName: sedai-kube-spec-controller-sa

      {{- with .Values.sedaiSync.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.sedaiSync.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      initContainers:
      - name: init-sqlite-db
        image: "{{ .Values.image.busyBox.repository }}:{{ .Values.image.busyBox.imageTag }}"
        command: ["sh", "-c", "chmod 777 {{ .Values.sedaiSync.sqlitePath }} && touch {{ .Values.sedaiSync.sqlitePath }}/sqlite.db && chmod 666 {{ .Values.sedaiSync.sqlitePath }}/sqlite.db"]
        volumeMounts:
          - name: sqlite-data
            mountPath: "{{ .Values.sedaiSync.sqlitePath }}"
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault

      containers:
      - name: sedai-kube-spec-controller
        image: "{{ .Values.image.sedaiSync.repository }}:{{ .Values.image.sedaiSync.imageTag }}"
        imagePullPolicy: {{ .Values.image.sedaiSync.imagePullPolicy }}
        resources:
          requests:
            cpu: "{{ .Values.resources.sedaiSync.cpu.requests }}"          
            memory: "{{ .Values.resources.sedaiSync.memory.requests }}"
          limits:
            cpu: "{{ .Values.resources.sedaiSync.cpu.limits }}"
            memory: "{{ .Values.resources.sedaiSync.memory.limits }}"
        ports:
        - containerPort: 8443
        env:
        - name: LOG_LEVEL
          value: "{{ .Values.sedaiSync.logLevel }}"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SSL_CA_PATH
          value: "{{ .Values.sedaiSync.tlsPath }}/ca.crt"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SSL_CERT_PATH
          value: "{{ .Values.sedaiSync.tlsPath }}/tls.crt"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SSL_KEY_PATH
          value: "{{ .Values.sedaiSync.tlsPath }}/tls.key"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_PORT
          value: "8443"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_SQLITE_DB_PATH
          value: "{{ .Values.sedaiSync.sqlitePath }}/sqlite.db"
        - name: SEDAI_KUBE_SPEC_CONTROLLER_DB_DRIVER_NAME
          value: "sqlite3"
        volumeMounts:
          - name: certs
            mountPath: "{{ .Values.sedaiSync.tlsPath }}"
            readOnly: true
          - name: sqlite-data
            mountPath: "{{ .Values.sedaiSync.sqlitePath }}"
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          capabilities:
            drop:
              - ALL
          seccompProfile:
            type: RuntimeDefault
      volumes:
        - name: certs
          secret:
            secretName: sedai-kube-spec-controller-tls
        - name: sqlite-data
          persistentVolumeClaim:
            claimName: sedai-kube-spec-controller-pvc
{{- end }}