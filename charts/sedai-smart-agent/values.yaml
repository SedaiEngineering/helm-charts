# -------------------------------------------------------------------
# Sedai Smart Agent Helm Chart Default Configuration
# -------------------------------------------------------------------

# Namespace where all Sedai components will be deployed
namespace: sedai-smart-agent

# -------------------------------------------------------------------
# Sedai Component Toggles
# -------------------------------------------------------------------
smartAgentEnroll:
  enabled: true                     # Enables the Smart Agent enrollment job (one-time job per cluster)

sedaiPrometheus:
  enabled: false                    # Enables Sedai-managed Prometheus for metric collection
  server:
    retention: '6h'                 # Retention period for Prometheus metrics (e.g., '6h', '1d', '7d')

sedaiKSM:
  enabled: false                    # Enables deployment of Kube State Metrics (KSM) for cluster object metrics

sedaiSync:
  enabled: false                    # Enables Sedai sync controller for workload auto-optimization
  tlsPath: "/tls"                   # Mount path for TLS certificates (if needed)
  sqlitePath: "/data"               # SQLite DB path (for local storage)
  logLevel: "error"                 # Logging level: trace, debug, info, warn, error

# -------------------------------------------------------------------
# Workload Metadata and Replicas
# -------------------------------------------------------------------
workload:
  smartAgentEnroll:
    name: sedai-smart-agent-enroll-job      # Name of the enrollment job resource
  smartAgent:
    name: sedai-smart-agent                 # Name of the Smart Agent deployment
    replicaCount: 1                         # Number of replicas
    revisionHistoryLimit: 1                 # Number of old ReplicaSets to retain
    secret: sedai-smart-agent               # Kubernetes Secret used by the agent
  prometheus:
    name: sedai-prometheus-server
    replicaCount: 1
    revisionHistoryLimit: 1
  ksm:
    name: sedai-kube-state-metrics
    replicaCount: 1
    revisionHistoryLimit: 1

# -------------------------------------------------------------------
# Debug Logging
# -------------------------------------------------------------------
enableAgentDebugLogs:
  enabled: false                                # Enables DEBUG logging on the agent
  agentLogLevel: "DEBUG"                        # Logging level (only used if enabled is true)
  loggingConfig: "classpath:log4j2-onprem.xml"  # Log4j2 config location (typically internal path)

# -------------------------------------------------------------------
# Container Image Configuration
# -------------------------------------------------------------------
image:
  smartAgent:
    name: sedai-agent
    repository: public.ecr.aws/sedai_io/sedai-smart-agent
    imageTag: v1.24.17
    imagePullPolicy: IfNotPresent

  smartagentEnroll:  
    name: sedai-enroll
    repository: public.ecr.aws/sedai_io/sedai-smart-agent-enroll
    imageTag: v2.4.7
    imagePullPolicy: Always

  ksm:
    repository: registry.k8s.io/kube-state-metrics/kube-state-metrics
    imageTag: v2.15.0
    imagePullPolicy: IfNotPresent

  reload:
    repository: quay.io/prometheus-operator/prometheus-config-reloader
    imageTag: v0.80.1
    imagePullPolicy: IfNotPresent

  prometheus:
    repository: quay.io/prometheus/prometheus
    imageTag: v3.2.1
    imagePullPolicy: IfNotPresent

  sedaiSync:
    repository: public.ecr.aws/sedai_io/sedai-kube-spec-controller
    imageTag: 0.0.3
    imagePullPolicy: IfNotPresent

  sedaiSyncDB:
    repository: public.ecr.aws/sedai_io/postgres
    imageTag: 17.5-alpine
    imagePullPolicy: IfNotPresent

  busyBox:
    repository: public.ecr.aws/sedai_io/busybox
    imageTag: 1.37
    imagePullPolicy: IfNotPresent

# -------------------------------------------------------------------
# Docker Image Pull Secret
# -------------------------------------------------------------------
imagePullSecret:
  enabled: false
  secretName : ""

# -------------------------------------------------------------------
# Resource Requests and Limits (per container)
# -------------------------------------------------------------------
resources:
  smartAgent:
    cpu:
      requests: "500m"
      limits: "500m"
    memory:
      requests: "1024Mi"
      limits: "1024Mi"

  prometheus:
    cpu:
      requests: "1000m"
      limits: "1000m"
    memory:
      requests: "4096Mi"
      limits: "4096Mi"
    storage: "60Gi"                        # Persistent volume storage for Prometheus

  ksm:
    cpu:
      requests: "500m"
      limits: "500m"
    memory:
      requests: "1024Mi"
      limits: "1024Mi"

  sedaiSyncDB:
    cpu:
      requests: "256m"
      limits: "256m"
    memory:
      requests: "512Mi"
      limits: "512Mi"

  sedaiSync:
    cpu:
      requests: "500m"
      limits: "500m"
    memory:
      requests: "1024Mi"
      limits: "1024Mi"

# -------------------------------------------------------------------
# Proxy Configuration (for egress access)
# -------------------------------------------------------------------
proxySettings:
  enabled: false                    # Set to true if your cluster requires a proxy for outbound internet access
  proxyHost:                        # Proxy server hostname (e.g., proxy.example.com)
  proxyPort:                        # Proxy server port (e.g., 3128)
  proxyUsername:                    # Optional proxy username
  proxyPassword:                    # Optional proxy password

# -------------------------------------------------------------------
# Sedai Integration Settings
# -------------------------------------------------------------------
sedaiIntegrationSettings:
  clusterName: ""                  # Unique name for your Kubernetes cluster
  clusterProvider: "AWS"          # Cloud provider: AWS, AZURE, GCP, SELF_MANAGED
  sedaiBaseUrl: ""                # Base URL of the Sedai platform (e.g., https://app.sedai.io)
  sedaiApiToken: ""               # API token (use this OR provide a Kubernetes Secret)
  sedaiApiTokenSecret: ""         # Name of the Kubernetes Secret that stores the token
  sedaiApiTokenSecretKey: ""      # Key within the Secret that stores the token
  forceCreate: false              # Force creation of Sedai config even if API token is invalid

# -------------------------------------------------------------------
# External Monitoring Provider Configuration
# -------------------------------------------------------------------
monitoringProvider:

  sedaiManagedPrometheus:
    enabled: false                 # Use Sedai-managed Prometheus (preferred default)

  prometheus:
    enabled: false                # Use self-hosted Prometheus instead
    serverUrl: "http://prometheus-server.prometheus.svc.cluster.local"  # URL of your Prometheus server
    credentialsProvider: "FEDERATEDPROMETHEUS_NO_AUTH" # Authentication type (BASIC_AUTH, FEDERATEDPROMETHEUS_JWT, or NO_AUTH)
    prometheusUsername:          # Username if using BASIC_AUTH
    prometheusPassword:          # Password if using BASIC_AUTH
    prometheusjwtToken:          # JWT token if using FEDERATEDPROMETHEUS_JWT

  mimir:
    enabled: false                # Use self-hosted Prometheus instead
    serverUrl: "http://mimir-nginx.mimir.svc.cluster.local/prometheus/"  # URL of your Mimir server
    credentialsProvider: "FEDERATEDPROMETHEUS_NO_AUTH" # Authentication type (BASIC_AUTH, FEDERATEDPROMETHEUS_JWT, or NO_AUTH)
    mimirUsername:          # Username if using BASIC_AUTH
    mimirPassword:          # Password if using BASIC_AUTH
    mimirjwtToken:          # JWT token if using FEDERATEDPROMETHEUS_JWT    

  datadog:
    enabled: false                    # Enable if using Datadog 
    datadogEndpoint:                  # Datadog API endpoint
    datadogApiKey:                    # Datadog API key
    datadogApplicationKey:            # Datadog App key

  newrelic:
    enabled: false                    # Enable if using NewRelic
    newrelicApiKey:                   # NewRelic API Key
    newrelicAccountId:                # NewRelic Account ID
    newrelicApiServer:                # NewRelic API Server URL

  gcpMonitoring:
    enabled: false                    # Enable if using Google Cloud Monitoring, Require additional Settings in GCP Console
    projectID:                        # GCP project ID where metrics will be sent